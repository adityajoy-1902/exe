import org.springframework.stereotype.Service;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.StringWriter;

@Service
public class AnsibleConnectionChecker {

    public String checkConnection(String ip, String user, String password, String os) {
        try {
            // Quote password to handle special characters safely
            String quotedPassword = "\"" + password.replace("\"", "\\\"") + "\"";

            String inventory;
            String ansibleCmd;

            if (os.equalsIgnoreCase("windows")) {
                // WinRM (Windows)
                inventory = String.format("%s ansible_user=%s ansible_connection=winrm ansible_port=5985", ip, user);

                ansibleCmd = String.format(
                    "ansible -i <(echo '%s') all -m win_ping -vvvv " +
                    "--extra-vars \"ansible_password=%s " +
                    "ansible_winrm_transport=ntlm " +
                    "ansible_winrm_server_cert_validation=ignore " +
                    "ansible_winrm_operation_timeout_sec=280 " +
                    "ansible_winrm_read_timeout_sec=300\"",
                    inventory, quotedPassword
                );

            } else {
                // SSH (Linux)
                inventory = String.format("%s ansible_user=%s ansible_connection=ssh", ip, user);

                ansibleCmd = String.format(
                    "ansible -i <(echo '%s') all -m ping -vvvv " +
                    "--extra-vars \"ansible_ssh_pass=%s\" " +
                    "--ssh-common-args='-o StrictHostKeyChecking=no -o PreferredAuthentications=password -o ConnectTimeout=30'",
                    inventory, quotedPassword
                );
            }

            // Run command using bash
            ProcessBuilder processBuilder = new ProcessBuilder("bash", "-c", ansibleCmd);
            processBuilder.redirectErrorStream(true);
            Process process = processBuilder.start();

            // Read output
            StringBuilder output = new StringBuilder();
            try (BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()))) {
                String line;
                while ((line = reader.readLine()) != null) {
                    output.append(line).append("\n");
                    System.out.println("[ANSIBLE OUTPUT] " + line);
                }
            }

            int exitCode = process.waitFor();
            if (exitCode == 0) {
                return "SUCCESS: Connection established.\n" + output;
            } else {
                return "ERROR: Ansible failed with exit code " + exitCode + "\n" + output;
            }

        } catch (Exception e) {
            StringWriter sw = new StringWriter();
            e.printStackTrace(new PrintWriter(sw));
            return "ERROR: Exception occurred: " + e.getMessage() + "\n" + sw.toString();
        }
    }
}
